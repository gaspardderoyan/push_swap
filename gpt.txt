>> MAKEFILE

CC = cc
CFLAGS = -Wall -Wextra -Werror -Iinc -Ilibft/inc

LIBFT_DIR = libft
LIBFT = $(LIBFT_DIR)/libft.a

SRC_DIR = src
OBJ_DIR = obj

SRC = list_addition.c \
	  list_manipulation.c \
	  list_utils.c \
	  main.c

OBJS = $(addprefix $(OBJ_DIR)/, $(SRCS:.c=.o))

NAME = push_swap

.PHONY: all clean fclean re libft

all: libft $(NAME)

# Build the main executable
$(NAME): $(OBJS) $(LIBFT)
	$(CC) $(CFLAGS) $(OBJS) -L$(LIBFT_DIR) -lft -o $(NAME)

# Compile object files
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c inc/project.h
	@mkdir -p $(OBJ_DIR)
	$(CC) $(CFLAGS) -c $< -o $@

# Build libft
libft:
	$(MAKE) -C $(LIBFT_DIR)

# Clean object files and libft
clean:
	$(MAKE) -C $(LIBFT_DIR) clean
	rm -rf $(OBJ_DIR)

# Fully clean the project
fclean: clean
	$(MAKE) -C $(LIBFT_DIR) fclean
	rm -f $(NAME)

# Rebuild the project
re: fclean all

>> PROJECT.H

#ifndef PROJECT_H
# define PROJECT_H

# include <stdio.h>
# include <stdlib.h>
# include <unistd.h>
# include <errno.h>
# include "../libft/inc/libft.h"
# include "double_lst.h"

// Function Prototypes

// Addition Functions
void    add_nbr_to_lst(t_dlist **lst, int n);
void    lst_from_str(char *str, t_dlist **lst);
void    lst_from_strs(int argc, char **argv, t_dlist **lst);
void    check_for_duplicate(t_dlist *lst, int n);

// Manipulation Functions
void    swap_first(t_dlist **lst);
void    f_both(t_dlist **a, t_dlist **b, void (f)(t_dlist**));
void    push_first(t_dlist **in, t_dlist **out);
void    rotate(t_dlist **lst);
void    reverse(t_dlist **lst);

// Utility Functions
int     str_isall(char *s, int (*f)(int));
void    pnf_list(t_dlist *lst, int free_flag);
t_dlist *get_ntl(t_dlist *lst);

#endif


>> MAIN.C

#include "../libft/inc/libft.h"
#include "double_lst.h"
#include "project.h"

void pnf_list(t_dlist *lst, int free_flag)
{
	t_dlist *current;

	while (lst != NULL)
	{
		if (free_flag != 2)
		{
			if (lst->content != NULL)
				ft_printf("contents: %d\n", *(int *)lst->content);
			else
				ft_printf("content is NULL\n");
		}
		current = lst;
		lst = lst->next;
		if (free_flag)
		{
			free(current->content);
			free(current);
		}
	}
	ft_printf("\n");
}

int main(int argc, char **argv)
{
	t_dlist *a;
	t_dlist *b;

	a = NULL;
	b = NULL;
	errno = 0;
	ft_printf("argc: %i\n", argc);
	if (argc == 1)
		return (ft_putstr_fd("Error\n", 2), 0);
	else if (argc == 2)
		lst_from_str(argv[1], &a);
	else
		lst_from_strs(argc, argv, &a);
	if (errno)
	{
		ft_printf("errno: %i\n", errno);
		pnf_list(a, 2);
		return (ft_putstr_fd("Error\n", 2), 0);
		return (0);
	}
	ft_putstr_fd("list a:\n", 1);
	pnf_list(a, 1);
	return (0);
}

>> MAKE OUTPUT
make -C libft
make[1]: Entering directory '/home/gderoyqn/code/push_swap/libft'
make[1]: Nothing to be done for 'all'.
make[1]: Leaving directory '/home/gderoyqn/code/push_swap/libft'
cc -Wall -Wextra -Werror -Iinc -Ilibft/inc  -Llibft -lft -o push_swap
/usr/bin/ld: /usr/bin/../lib/gcc/x86_64-linux-gnu/12/../../../x86_64-linux-gnu/crt1.o: in function `_start':
(.text+0x1b): undefined reference to `main'
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make: *** [Makefile:25: push_swap] Error 1

>> QUERY
Why am I getting this output? 
